From 8f499e3fc9039cab00ea727f16f854a14b862a14 Mon Sep 17 00:00:00 2001
From: "lauren n. liberda" <lauren@selfisekai.rocks>
Date: Thu, 27 Jun 2024 20:28:29 +0200
Subject: [PATCH] stdc++: workaround bug in std::optional with clang in
 shared_image_backing.cc

std::optional<T>::emplace does not work in this combination,
see https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101227

Bug: 41455655
---
 .../service/shared_image/shared_image_backing.cc              | 4 +++-
 .../service/shared_image/shared_image_backing.h               | 3 ---
 2 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/gpu/command_buffer/service/shared_image/shared_image_backing.cc b/gpu/command_buffer/service/shared_image/shared_image_backing.cc
index c33550f7b8818..fa167316c3539 100644
--- a/gpu/command_buffer/service/shared_image/shared_image_backing.cc
+++ b/gpu/command_buffer/service/shared_image/shared_image_backing.cc
@@ -4,6 +4,8 @@
 
 #include "gpu/command_buffer/service/shared_image/shared_image_backing.h"
 
+#include <optional>
+
 #include "base/notreached.h"
 #include "base/ranges/algorithm.h"
 #include "base/trace_event/process_memory_dump.h"
@@ -401,7 +403,7 @@ void SharedImageBacking::OnReadSucceeded() {
 
 void SharedImageBacking::OnWriteSucceeded() {
   AutoLock auto_lock(this);
-  scoped_write_uma_.emplace();
+  scoped_write_uma_.emplace(ScopedWriteUMA());
 }
 
 size_t SharedImageBacking::GetEstimatedSize() const {
diff --git a/gpu/command_buffer/service/shared_image/shared_image_backing.h b/gpu/command_buffer/service/shared_image/shared_image_backing.h
index 7ea4a01b196ee..79f3b6bc135d5 100644
--- a/gpu/command_buffer/service/shared_image/shared_image_backing.h
+++ b/gpu/command_buffer/service/shared_image/shared_image_backing.h
@@ -390,9 +390,6 @@ class GPU_GLES2_EXPORT SharedImageBacking {
    public:
     ScopedWriteUMA() = default;
 
-    ScopedWriteUMA(const ScopedWriteUMA&) = delete;
-    ScopedWriteUMA& operator=(const ScopedWriteUMA&) = delete;
-
     ~ScopedWriteUMA() {
       UMA_HISTOGRAM_BOOLEAN("GPU.SharedImage.ContentConsumed",
                             content_consumed_);
