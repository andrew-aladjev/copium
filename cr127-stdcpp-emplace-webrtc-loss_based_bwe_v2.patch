From 6caedceb8255803464bb962ac987781a1f9007a2 Mon Sep 17 00:00:00 2001
From: "lauren n. liberda" <lauren@selfisekai.rocks>
Date: Thu, 27 Jun 2024 00:40:53 +0200
Subject: [PATCH] stdc++: provide an initialized value for
 std::optional<T>::emplace()

std::optional<T>::emplace() without an initializer is broken
on clang++ with gnu libstdc++. this workarounds the bug
by constructing the value manually.
https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101227

Bug: chromium:41455655
Change-Id: I05354e57cc4cdda3fa6d3cd23f46462b69cc3bee
---
 modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/third_party/webrtc/modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc b/third_party/webrtc/modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc
index 7deeb7ad64..2f47ee0f18 100644
--- a/third_party/webrtc/modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc
+++ b/third_party/webrtc/modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc
@@ -549,7 +549,7 @@ absl::optional<LossBasedBweV2::Config> LossBasedBweV2::CreateConfig(
   if (!enabled.Get()) {
     return config;
   }
-  config.emplace();
+  config.emplace(Config());
   config->bandwidth_rampup_upper_bound_factor =
       bandwidth_rampup_upper_bound_factor.Get();
   config->bandwidth_rampup_upper_bound_factor_in_hold =
